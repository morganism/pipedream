#!/bin/sh -e
FILE=/usr/local/bin/pd
ROADMAP_URL=https://github.com/PipedreamHQ/pipedream/issues
OS=`uname | tr '[:upper:]' '[:lower:]' || echo "linux"`
UNAME_ARCH=`uname -m`

# CDN directories are generated from GO ARCH strings,
# which are different from the strings generated by uname
# Mappings derived from https://en.wikipedia.org/wiki/Uname
case $UNAME_ARCH in
  "x86_64") ARCH=amd64
  ;;
  "i686") ARCH=386
  ;; 
  "armv7l") ARCH=arm  # See https://github.com/golang/go/wiki/GoArm#supported-architectures
  ;; 
  *) echo "Architecture currently not supported. Please file an issue at ${ROADMAP_URL}" && exit 1
esac

if test -f "$FILE"; then
  echo "$FILE exists, quiting -- if you want to update, just run $FILE"
  exit 0
fi

echo "Checking for latest version..."
LATEST=$(curl https://cli.pipedream.com/LATEST_VERSION 2>/dev/null)
echo "Preparing to install Pipedream CLI $LATEST..."
# newer mac os x fails without Xs but older doesn't even use them... lol
TMP_DIR=$(mktemp -d -t pd-XXX)
LATEST_URL="https://cli.pipedream.com/$OS/$ARCH/$LATEST/pd.zip"
echo "Fetching zipped binary..."
curl $LATEST_URL > $TMP_DIR/pd.zip 2>/dev/null
if ! (file $TMP_DIR/pd.zip | grep "Zip archive"); then
  echo "Error downloading zip from $LATEST_URL!"
  echo "It's possible your OS or architecture currently isn't supported. Please file an issue at ${ROADMAP_URL}"
  exit 1
fi
echo "Unzipping..."
cd $TMP_DIR && unzip pd.zip
echo "Installing to $FILE..."
chmod +x $TMP_DIR/pd
mv $TMP_DIR/pd $FILE
# XXX do this at exit so even in case of failure we clean up
rm -rf $TMP_DIR
